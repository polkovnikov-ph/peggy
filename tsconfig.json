{
  "compilerOptions": {
    "allowJs": true,                                /* Allow javascript files to be compiled. */
    "checkJs": false,                               /* Report errors in .js files. */
    "declaration": false,                           /* Generates corresponding '.d.ts' file. */
    "declarationMap": false,                        /* Generates a sourcemap for each corresponding '.d.ts' file. */
    "esModuleInterop": true,                        /* Enables emit interoperability between CommonJS and ES Modules via creation of namespace objects for all imports. Implies 'allowSyntheticDefaultImports'. */
    "forceConsistentCasingInFileNames": true,       /* Disallow inconsistently-cased references to the same file. */
    "module": "commonjs",                           /* Specify module code generation: 'none', 'commonjs', 'amd', 'system', 'umd', 'es2015', 'es2020', or 'ESNext'. */
    "outDir": "./build/ts/",                        /* Redirect output structure to the directory. */
    "removeComments": true,                         /* Do not emit comments to output. */
    "rootDir": "./",                                /* Specify the root directory of input files. Use to control the output directory structure with --outDir. */
    "skipLibCheck": true,                           /* Skip type checking of declaration files. */
    "sourceMap": true,                              /* Generates corresponding '.map' file. */
    "strict": true,                                 /* Enable all strict type-checking options. */
    "target": "es5",                                /* Specify ECMAScript target version: 'ES3' (default), 'ES5', 'ES2015', 'ES2016', 'ES2017', 'ES2018', 'ES2019', 'ES2020', or 'ESNEXT'. */
    "lib": ["ES2017"],                              /* Specify library files to be included in the compilation. */

  /* over time we will enable these */
    // "jsx": "preserve",                           /* Specify JSX code generation: 'preserve', 'react-native', 'react', 'react-jsx' or 'react-jsxdev'. */
    "noImplicitAny": true,                          /* Raise error on expressions and declarations with an implied 'any' type. */
    "strictNullChecks": true,                       /* Enable strict null checks. */
    "strictFunctionTypes": true,                    /* Enable strict checking of function types. */
    "strictBindCallApply": true,                    /* Enable strict 'bind', 'call', and 'apply' methods on functions. */
    "strictPropertyInitialization": true,           /* Enable strict checking of property initialization in classes. */
    "noImplicitThis": true,                         /* Raise error on 'this' expressions with an implied 'any' type. */
    "alwaysStrict": true,                           /* Parse in strict mode and emit "use strict" for each source file. */
    // "noUnusedLocals": true,                      /* Report errors on unused locals. */
    // "noUnusedParameters": true,                  /* Report errors on unused parameters. */
    // "noImplicitReturns": true,                   /* Report error when not all code paths in function return a value. */
    // "noFallthroughCasesInSwitch": true,          /* Report errors for fallthrough cases in switch statement. */
    // "noUncheckedIndexedAccess": true,            /* Include 'undefined' in index signature results */
    "noPropertyAccessFromIndexSignature": true,     /* Require undeclared properties from index signatures to use element accesses. */

    // "allowSyntheticDefaultImports": true,        /* Allow default imports from modules with no default export. This does not affect code emit, just typechecking. */
  },
  "include": ["./lib/**/*.js", "./test/**/*.spec.js", "./benchmark/*.js", "lib/compiler/visitor.ts", "lib/compiler/utils.ts", "lib/compiler/stack.ts", "lib/compiler/session.ts", "lib/compiler/opcodes.ts", "lib/compiler/index.ts", "lib/compiler/asts.ts", "lib/compiler/passes/report-undefined-rules.ts", "lib/compiler/passes/report-infinite-repetition.ts", "lib/compiler/passes/report-infinite-recursion.ts", "lib/compiler/passes/report-incorrect-plucking.ts", "lib/compiler/passes/report-duplicate-rules.ts", "lib/compiler/passes/report-duplicate-labels.ts", "lib/compiler/passes/remove-proxy-rules.ts", "lib/compiler/passes/inference-match-result.ts", "lib/compiler/passes/generate-js.ts", "lib/compiler/passes/generate-bytecode.ts", "lib/version.ts", "lib/peg.ts", "lib/grammar-error.ts"]
}
